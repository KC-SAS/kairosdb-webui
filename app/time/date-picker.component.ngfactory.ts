/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './date-picker.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import10 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/forms/src/directives/default_value_accessor';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/forms/src/directives/ng_model';
import * as import18 from '@angular/forms/src/directives/ng_control';
import * as import19 from '@angular/forms/src/directives/ng_control_status';
import * as import20 from '@angular/common/src/directives/ng_if';
import * as import21 from 'ng2-bootstrap/components/datepicker/datepicker.component';
import * as import22 from '../../node_modules/ng2-bootstrap/components/datepicker/datepicker.component.ngfactory';
export class Wrapper_DatePickerComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DatePickerComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.DatePickerComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_dateModel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dateModel = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.dateModelChange.subscribe(_eventHandler.bind(view,'dateModelChange'))); }
  }
}
var renderType_DatePickerComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_DatePickerComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DatePickerComponent>;
  _DatePickerComponent_0_3:Wrapper_DatePickerComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatePickerComponent_Host0,renderType_DatePickerComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'kairos-datepicker',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DatePickerComponent0(this.viewUtils,this,0,this._el_0);
    this._DatePickerComponent_0_3 = new Wrapper_DatePickerComponent(new import8.ElementRef(this._el_0));
    this.compView_0.create(this._DatePickerComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._DatePickerComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DatePickerComponent) && (0 === requestNodeIndex))) { return this._DatePickerComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DatePickerComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DatePickerComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DatePickerComponentNgFactory:import7.ComponentFactory<import0.DatePickerComponent> = new import7.ComponentFactory<import0.DatePickerComponent>('kairos-datepicker',View_DatePickerComponent_Host0,import0.DatePickerComponent);
const styles_DatePickerComponent:any[] = ['@keyframes slideDown {\n        0% {\n            transform:  translateY(-10px);\n        }\n        100% {\n            transform: translateY(0px);\n        }\n    }\n    .form-control[_ngcontent-%COMP%] {\n        width: 150px;\n    }\n    .popup[_ngcontent-%COMP%] {\n      position: absolute;\n      background-color: #fff;\n      border-radius: 3px;\n      border: 1px solid #ddd;\n      height: 251px;\n      z-index: 100;\n      animation: slideDown 0.1s ease-in-out;\n      animation-fill-mode: both;\n    }'];
var renderType_DatePickerComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_DatePickerComponent,{});
export class View_DatePickerComponent0 extends import2.AppView<import0.DatePickerComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _DefaultValueAccessor_6_3:import9.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_6_4:any[];
  _NgModel_6_5:import10.Wrapper_NgModel;
  _NgControl_6_6:any;
  _NgControlStatus_6_7:import11.Wrapper_NgControlStatus;
  _text_7:any;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import12.ViewContainer;
  _TemplateRef_9_5:any;
  _NgIf_9_6:import13.Wrapper_NgIf;
  _text_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatePickerComponent0,renderType_DatePickerComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','input-group'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n	    ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray4(4,'class','input-group-addon','id','date'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'Date',(null as any));
    this._text_5 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray4(4,'aria-describedby','date','class','form-control'),(null as any));
    this._DefaultValueAccessor_6_3 = new import9.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_6));
    this._NG_VALUE_ACCESSOR_6_4 = [this._DefaultValueAccessor_6_3.context];
    this._NgModel_6_5 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_6_4);
    this._NgControl_6_6 = this._NgModel_6_5.context;
    this._NgControlStatus_6_7 = new import11.Wrapper_NgControlStatus(this._NgControl_6_6);
    this._text_7 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_9 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_9 = new import12.ViewContainer(9,(null as any),this,this._anchor_9);
    this._TemplateRef_9_5 = new import14.TemplateRef_(this,9,this._anchor_9);
    this._NgIf_9_6 = new import13.Wrapper_NgIf(this._vc_9.vcRef,this._TemplateRef_9_5);
    this._text_10 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray16(10,'ngModelChange',(null as any),'focus',(null as any),'keyup',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_6));
    this._NgModel_6_5.subscribe(this,this.eventHandler(this.handleEvent_6),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._anchor_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.DefaultValueAccessor) && (6 === requestNodeIndex))) { return this._DefaultValueAccessor_6_3.context; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_6_4; }
    if (((token === import17.NgModel) && (6 === requestNodeIndex))) { return this._NgModel_6_5.context; }
    if (((token === import18.NgControl) && (6 === requestNodeIndex))) { return this._NgControl_6_6; }
    if (((token === import19.NgControlStatus) && (6 === requestNodeIndex))) { return this._NgControlStatus_6_7.context; }
    if (((token === import14.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import20.NgIf) && (9 === requestNodeIndex))) { return this._NgIf_9_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_1_0:any = this.context.dateModel;
    this._NgModel_6_5.check_model(currVal_6_1_0,throwOnChange,false);
    this._NgModel_6_5.ngDoCheck(this,this._el_6,throwOnChange);
    this._NgControlStatus_6_7.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_9_0_0:any = this.context.showDatepicker;
    this._NgIf_9_6.check_ngIf(currVal_9_0_0,throwOnChange,false);
    this._NgIf_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatus_6_7.checkHost(this,this,this._el_6,throwOnChange);
  }
  destroyInternal():void {
    this._vc_9.destroyNestedViews();
    this._NgModel_6_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 9)) { return new View_DatePickerComponent1(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_6_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.dateModel = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_1:any = ((<any>this.context.showPopup()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'keyup')) {
      const pd_sub_2:any = ((<any>this.context.onTextEdit(this._el_6.value)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_DatePickerComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import21.DatePickerComponent>;
  _NgModel_0_3:import10.Wrapper_NgModel;
  _NgControl_0_4:any;
  _NgControlStatus_0_5:import11.Wrapper_NgControlStatus;
  _DatePickerComponent_0_6:import22.Wrapper_DatePickerComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_DatePickerComponent1,renderType_DatePickerComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'datepicker',new import3.InlineArray2(2,'class','popup'),(null as any));
    this.compView_0 = new import22.View_DatePickerComponent0(this.viewUtils,this,0,this._el_0);
    this._NgModel_0_3 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),(null as any));
    this._NgControl_0_4 = this._NgModel_0_3.context;
    this._NgControlStatus_0_5 = new import11.Wrapper_NgControlStatus(this._NgControl_0_4);
    this._DatePickerComponent_0_6 = new import22.Wrapper_DatePickerComponent(this._NgModel_0_3.context);
    this.compView_0.create(this._DatePickerComponent_0_6.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'ngModelChange',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.NgModel) && (0 === requestNodeIndex))) { return this._NgModel_0_3.context; }
    if (((token === import18.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_4; }
    if (((token === import19.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_5.context; }
    if (((token === import21.DatePickerComponent) && (0 === requestNodeIndex))) { return this._DatePickerComponent_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.dateObject;
    this._NgModel_0_3.check_model(currVal_0_0_0,throwOnChange,false);
    this._NgModel_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_2_0:any = true;
    this._DatePickerComponent_0_6.check_showWeeks(currVal_0_2_0,throwOnChange,false);
    this._DatePickerComponent_0_6.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_5.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgModel_0_3.ngOnDestroy();
    this._DatePickerComponent_0_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.dateObject = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}