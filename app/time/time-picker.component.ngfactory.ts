/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './time-picker.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from './time-picker.component.css.shim';
import * as import10 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/forms/src/directives/default_value_accessor';
import * as import17 from '@angular/forms/src/directives/control_value_accessor';
import * as import18 from '@angular/forms/src/directives/ng_model';
import * as import19 from '@angular/forms/src/directives/ng_control';
import * as import20 from '@angular/forms/src/directives/ng_control_status';
import * as import21 from '@angular/common/src/directives/ng_if';
import * as import22 from '../../node_modules/@angular/forms/src/directives/range_value_accessor.ngfactory';
import * as import23 from '@angular/forms/src/directives/range_value_accessor';
export class Wrapper_TimePickerComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TimePickerComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.TimePickerComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_timeModel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.timeModel = currValue;
      this._changes['timeModel'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.timeModelChange.subscribe(_eventHandler.bind(view,'timeModelChange'))); }
  }
}
var renderType_TimePickerComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TimePickerComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TimePickerComponent>;
  _TimePickerComponent_0_3:Wrapper_TimePickerComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TimePickerComponent_Host0,renderType_TimePickerComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'kairos-timepicker',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TimePickerComponent0(this.viewUtils,this,0,this._el_0);
    this._TimePickerComponent_0_3 = new Wrapper_TimePickerComponent(new import8.ElementRef(this._el_0));
    this.compView_0.create(this._TimePickerComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._TimePickerComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TimePickerComponent) && (0 === requestNodeIndex))) { return this._TimePickerComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TimePickerComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TimePickerComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TimePickerComponentNgFactory:import7.ComponentFactory<import0.TimePickerComponent> = new import7.ComponentFactory<import0.TimePickerComponent>('kairos-timepicker',View_TimePickerComponent_Host0,import0.TimePickerComponent);
const styles_TimePickerComponent:any[] = [import9.styles];
var renderType_TimePickerComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_TimePickerComponent,{});
export class View_TimePickerComponent0 extends import2.AppView<import0.TimePickerComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _DefaultValueAccessor_6_3:import10.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_6_4:any[];
  _NgModel_6_5:import11.Wrapper_NgModel;
  _NgControl_6_6:any;
  _NgControlStatus_6_7:import12.Wrapper_NgControlStatus;
  _text_7:any;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import13.ViewContainer;
  _TemplateRef_9_5:any;
  _NgIf_9_6:import14.Wrapper_NgIf;
  _text_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TimePickerComponent0,renderType_TimePickerComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','input-group'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n	',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray4(4,'class','input-group-addon','id','time'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'Time',(null as any));
    this._text_5 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray4(4,'aria-describedby','time','class','form-control'),(null as any));
    this._DefaultValueAccessor_6_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_6));
    this._NG_VALUE_ACCESSOR_6_4 = [this._DefaultValueAccessor_6_3.context];
    this._NgModel_6_5 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_6_4);
    this._NgControl_6_6 = this._NgModel_6_5.context;
    this._NgControlStatus_6_7 = new import12.Wrapper_NgControlStatus(this._NgControl_6_6);
    this._text_7 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._anchor_9 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_9 = new import13.ViewContainer(9,(null as any),this,this._anchor_9);
    this._TemplateRef_9_5 = new import15.TemplateRef_(this,9,this._anchor_9);
    this._NgIf_9_6 = new import14.Wrapper_NgIf(this._vc_9.vcRef,this._TemplateRef_9_5);
    this._text_10 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray8(8,'focus',(null as any),'keyup',(null as any),'blur',(null as any),'input',(null as any)),this.eventHandler(this.handleEvent_6));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._anchor_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DefaultValueAccessor) && (6 === requestNodeIndex))) { return this._DefaultValueAccessor_6_3.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_6_4; }
    if (((token === import18.NgModel) && (6 === requestNodeIndex))) { return this._NgModel_6_5.context; }
    if (((token === import19.NgControl) && (6 === requestNodeIndex))) { return this._NgControl_6_6; }
    if (((token === import20.NgControlStatus) && (6 === requestNodeIndex))) { return this._NgControlStatus_6_7.context; }
    if (((token === import15.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import21.NgIf) && (9 === requestNodeIndex))) { return this._NgIf_9_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_1_0:any = this.context.timeModel;
    this._NgModel_6_5.check_model(currVal_6_1_0,throwOnChange,false);
    this._NgModel_6_5.ngDoCheck(this,this._el_6,throwOnChange);
    this._NgControlStatus_6_7.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_9_0_0:any = this.context.showTimepicker;
    this._NgIf_9_6.check_ngIf(currVal_9_0_0,throwOnChange,false);
    this._NgIf_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatus_6_7.checkHost(this,this,this._el_6,throwOnChange);
  }
  destroyInternal():void {
    this._vc_9.destroyNestedViews();
    this._NgModel_6_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 9)) { return new View_TimePickerComponent1(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_6_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'focus')) {
      const pd_sub_0:any = ((<any>this.context.showPopup()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keyup')) {
      const pd_sub_1:any = ((<any>this.context.onTextEdit(this._el_6.value)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_2:any = ((<any>this.context.onBlur(this._el_6)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_TimePickerComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import10.Wrapper_DefaultValueAccessor;
  _RangeValueAccessor_5_4:import22.Wrapper_RangeValueAccessor;
  _NG_VALUE_ACCESSOR_5_5:any[];
  _NgModel_5_6:import11.Wrapper_NgModel;
  _NgControl_5_7:any;
  _NgControlStatus_5_8:import12.Wrapper_NgControlStatus;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _DefaultValueAccessor_10_3:import10.Wrapper_DefaultValueAccessor;
  _RangeValueAccessor_10_4:import22.Wrapper_RangeValueAccessor;
  _NG_VALUE_ACCESSOR_10_5:any[];
  _NgModel_10_6:import11.Wrapper_NgModel;
  _NgControl_10_7:any;
  _NgControlStatus_10_8:import12.Wrapper_NgControlStatus;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _DefaultValueAccessor_15_3:import10.Wrapper_DefaultValueAccessor;
  _RangeValueAccessor_15_4:import22.Wrapper_RangeValueAccessor;
  _NG_VALUE_ACCESSOR_15_5:any[];
  _NgModel_15_6:import11.Wrapper_NgModel;
  _NgControl_15_7:any;
  _NgControlStatus_15_8:import12.Wrapper_NgControlStatus;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _DefaultValueAccessor_20_3:import10.Wrapper_DefaultValueAccessor;
  _RangeValueAccessor_20_4:import22.Wrapper_RangeValueAccessor;
  _NG_VALUE_ACCESSOR_20_5:any[];
  _NgModel_20_6:import11.Wrapper_NgModel;
  _NgControl_20_7:any;
  _NgControlStatus_20_8:import12.Wrapper_NgControlStatus;
  _text_21:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_TimePickerComponent1,renderType_TimePickerComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','popup'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray2(2,'class','hourLabel'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'Hour:',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(8,'class','hourInput','max','23','min','0','type','range'),(null as any));
    this._DefaultValueAccessor_5_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_5));
    this._RangeValueAccessor_5_4 = new import22.Wrapper_RangeValueAccessor(this.renderer,new import8.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_5 = [
      this._DefaultValueAccessor_5_3.context,
      this._RangeValueAccessor_5_4.context
    ]
    ;
    this._NgModel_5_6 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_5);
    this._NgControl_5_7 = this._NgModel_5_6.context;
    this._NgControlStatus_5_8 = new import12.Wrapper_NgControlStatus(this._NgControl_5_7);
    this._text_6 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray2(2,'class','minutesLabel'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'Min:',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(8,'class','minutesInput','max','59','min','0','type','range'),(null as any));
    this._DefaultValueAccessor_10_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_10));
    this._RangeValueAccessor_10_4 = new import22.Wrapper_RangeValueAccessor(this.renderer,new import8.ElementRef(this._el_10));
    this._NG_VALUE_ACCESSOR_10_5 = [
      this._DefaultValueAccessor_10_3.context,
      this._RangeValueAccessor_10_4.context
    ]
    ;
    this._NgModel_10_6 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_10_5);
    this._NgControl_10_7 = this._NgModel_10_6.context;
    this._NgControlStatus_10_8 = new import12.Wrapper_NgControlStatus(this._NgControl_10_7);
    this._text_11 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray2(2,'class','secondsLabel'),(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Sec:',(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(8,'class','secondsInput','max','59','min','0','type','range'),(null as any));
    this._DefaultValueAccessor_15_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_15));
    this._RangeValueAccessor_15_4 = new import22.Wrapper_RangeValueAccessor(this.renderer,new import8.ElementRef(this._el_15));
    this._NG_VALUE_ACCESSOR_15_5 = [
      this._DefaultValueAccessor_15_3.context,
      this._RangeValueAccessor_15_4.context
    ]
    ;
    this._NgModel_15_6 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_15_5);
    this._NgControl_15_7 = this._NgModel_15_6.context;
    this._NgControlStatus_15_8 = new import12.Wrapper_NgControlStatus(this._NgControl_15_7);
    this._text_16 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray2(2,'class','millisecondsLabel'),(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Ms:',(null as any));
    this._text_19 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray16(10,'class','millisecondsInput','max','999','min','0','step','10','type','range'),(null as any));
    this._DefaultValueAccessor_20_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_20));
    this._RangeValueAccessor_20_4 = new import22.Wrapper_RangeValueAccessor(this.renderer,new import8.ElementRef(this._el_20));
    this._NG_VALUE_ACCESSOR_20_5 = [
      this._DefaultValueAccessor_20_3.context,
      this._RangeValueAccessor_20_4.context
    ]
    ;
    this._NgModel_20_6 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_20_5);
    this._NgControl_20_7 = this._NgModel_20_6.context;
    this._NgControlStatus_20_8 = new import12.Wrapper_NgControlStatus(this._NgControl_20_7);
    this._text_21 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_5));
    this._NgModel_5_6.subscribe(this,this.eventHandler(this.handleEvent_5),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_10));
    this._NgModel_10_6.subscribe(this,this.eventHandler(this.handleEvent_10),true);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_15,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_15));
    this._NgModel_15_6.subscribe(this,this.eventHandler(this.handleEvent_15),true);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_20,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_20));
    this._NgModel_20_6.subscribe(this,this.eventHandler(this.handleEvent_20),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3.context; }
    if (((token === import23.RangeValueAccessor) && (5 === requestNodeIndex))) { return this._RangeValueAccessor_5_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_5; }
    if (((token === import18.NgModel) && (5 === requestNodeIndex))) { return this._NgModel_5_6.context; }
    if (((token === import19.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_7; }
    if (((token === import20.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_8.context; }
    if (((token === import16.DefaultValueAccessor) && (10 === requestNodeIndex))) { return this._DefaultValueAccessor_10_3.context; }
    if (((token === import23.RangeValueAccessor) && (10 === requestNodeIndex))) { return this._RangeValueAccessor_10_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_10_5; }
    if (((token === import18.NgModel) && (10 === requestNodeIndex))) { return this._NgModel_10_6.context; }
    if (((token === import19.NgControl) && (10 === requestNodeIndex))) { return this._NgControl_10_7; }
    if (((token === import20.NgControlStatus) && (10 === requestNodeIndex))) { return this._NgControlStatus_10_8.context; }
    if (((token === import16.DefaultValueAccessor) && (15 === requestNodeIndex))) { return this._DefaultValueAccessor_15_3.context; }
    if (((token === import23.RangeValueAccessor) && (15 === requestNodeIndex))) { return this._RangeValueAccessor_15_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (15 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_15_5; }
    if (((token === import18.NgModel) && (15 === requestNodeIndex))) { return this._NgModel_15_6.context; }
    if (((token === import19.NgControl) && (15 === requestNodeIndex))) { return this._NgControl_15_7; }
    if (((token === import20.NgControlStatus) && (15 === requestNodeIndex))) { return this._NgControlStatus_15_8.context; }
    if (((token === import16.DefaultValueAccessor) && (20 === requestNodeIndex))) { return this._DefaultValueAccessor_20_3.context; }
    if (((token === import23.RangeValueAccessor) && (20 === requestNodeIndex))) { return this._RangeValueAccessor_20_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (20 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_20_5; }
    if (((token === import18.NgModel) && (20 === requestNodeIndex))) { return this._NgModel_20_6.context; }
    if (((token === import19.NgControl) && (20 === requestNodeIndex))) { return this._NgControl_20_7; }
    if (((token === import20.NgControlStatus) && (20 === requestNodeIndex))) { return this._NgControlStatus_20_8.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._RangeValueAccessor_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_2_0:any = this.parentView.context.hour;
    this._NgModel_5_6.check_model(currVal_5_2_0,throwOnChange,false);
    this._NgModel_5_6.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_8.ngDoCheck(this,this._el_5,throwOnChange);
    this._DefaultValueAccessor_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this._RangeValueAccessor_10_4.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_10_2_0:any = this.parentView.context.minute;
    this._NgModel_10_6.check_model(currVal_10_2_0,throwOnChange,false);
    this._NgModel_10_6.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatus_10_8.ngDoCheck(this,this._el_10,throwOnChange);
    this._DefaultValueAccessor_15_3.ngDoCheck(this,this._el_15,throwOnChange);
    this._RangeValueAccessor_15_4.ngDoCheck(this,this._el_15,throwOnChange);
    const currVal_15_2_0:any = this.parentView.context.second;
    this._NgModel_15_6.check_model(currVal_15_2_0,throwOnChange,false);
    this._NgModel_15_6.ngDoCheck(this,this._el_15,throwOnChange);
    this._NgControlStatus_15_8.ngDoCheck(this,this._el_15,throwOnChange);
    this._DefaultValueAccessor_20_3.ngDoCheck(this,this._el_20,throwOnChange);
    this._RangeValueAccessor_20_4.ngDoCheck(this,this._el_20,throwOnChange);
    const currVal_20_2_0:any = this.parentView.context.millisecond;
    this._NgModel_20_6.check_model(currVal_20_2_0,throwOnChange,false);
    this._NgModel_20_6.ngDoCheck(this,this._el_20,throwOnChange);
    this._NgControlStatus_20_8.ngDoCheck(this,this._el_20,throwOnChange);
    this._NgControlStatus_5_8.checkHost(this,this,this._el_5,throwOnChange);
    this._NgControlStatus_10_8.checkHost(this,this,this._el_10,throwOnChange);
    this._NgControlStatus_15_8.checkHost(this,this,this._el_15,throwOnChange);
    this._NgControlStatus_20_8.checkHost(this,this,this._el_20,throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_5_6.ngOnDestroy();
    this._NgModel_10_6.ngOnDestroy();
    this._NgModel_15_6.ngOnDestroy();
    this._NgModel_20_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_5_3.handleEvent(eventName,$event) && result);
    result = (this._RangeValueAccessor_5_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onSliderChange($event,'hour')) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.hour = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_10_3.handleEvent(eventName,$event) && result);
    result = (this._RangeValueAccessor_10_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onSliderChange($event,'minute')) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.minute = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_15(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_15_3.handleEvent(eventName,$event) && result);
    result = (this._RangeValueAccessor_15_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onSliderChange($event,'second')) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.second = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_20(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_20_3.handleEvent(eventName,$event) && result);
    result = (this._RangeValueAccessor_20_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onSliderChange($event,'millisecond')) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.millisecond = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}