/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './typeahead.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/view_container';
import * as import9 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import10 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '../../node_modules/ng2-bootstrap/components/typeahead/typeahead.directive.ngfactory';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from 'ng2-bootstrap/components/utils/components-helper.service';
import * as import16 from '@angular/forms/src/directives/default_value_accessor';
import * as import17 from '@angular/forms/src/directives/control_value_accessor';
import * as import18 from '@angular/forms/src/directives/ng_model';
import * as import19 from '@angular/forms/src/directives/ng_control';
import * as import20 from '@angular/forms/src/directives/ng_control_status';
import * as import21 from 'ng2-bootstrap/components/typeahead/typeahead.directive';
import * as import22 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '@angular/common/src/directives/ng_if';
export class Wrapper_TypeaheadComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TypeaheadComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor() {
    this._changed = false;
    this.context = new import0.TypeaheadComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_0 = currValue;
    }
  }
  check_typeaheadSource(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.typeaheadSource = currValue;
      this._expr_1 = currValue;
    }
  }
  check_typeaheadMinLength(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.typeaheadMinLength = currValue;
      this._expr_2 = currValue;
    }
  }
  check_typeaheadWaitMs(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.typeaheadWaitMs = currValue;
      this._expr_3 = currValue;
    }
  }
  check_typeaheadOptionsLimit(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.typeaheadOptionsLimit = currValue;
      this._expr_4 = currValue;
    }
  }
  check_typeaheadOptionField(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.typeaheadOptionField = currValue;
      this._expr_5 = currValue;
    }
  }
  check_typeaheadGroupField(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.typeaheadGroupField = currValue;
      this._expr_6 = currValue;
    }
  }
  check_typeaheadAsync(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.typeaheadAsync = currValue;
      this._expr_7 = currValue;
    }
  }
  check_typeaheadLatinize(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.typeaheadLatinize = currValue;
      this._expr_8 = currValue;
    }
  }
  check_typeaheadWordDelimiters(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.typeaheadWordDelimiters = currValue;
      this._expr_9 = currValue;
    }
  }
  check_typeaheadSingleWords(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.typeaheadSingleWords = currValue;
      this._expr_10 = currValue;
    }
  }
  check_typeaheadPhraseDelimiters(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.typeaheadPhraseDelimiters = currValue;
      this._expr_11 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._expr_12 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.valueChange.subscribe(_eventHandler.bind(view,'valueChange'))); }
    if (emit1) { (this.subscription1 = this.context.typeaheadLoading.subscribe(_eventHandler.bind(view,'typeaheadLoading'))); }
    if (emit2) { (this.subscription2 = this.context.typeaheadNoResults.subscribe(_eventHandler.bind(view,'typeaheadNoResults'))); }
    if (emit3) { (this.subscription3 = this.context.typeaheadOnSelect.subscribe(_eventHandler.bind(view,'typeaheadOnSelect'))); }
    if (emit4) { (this.subscription4 = this.context.blur.subscribe(_eventHandler.bind(view,'blur'))); }
  }
}
var renderType_TypeaheadComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TypeaheadComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TypeaheadComponent>;
  _TypeaheadComponent_0_3:Wrapper_TypeaheadComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TypeaheadComponent_Host0,renderType_TypeaheadComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'kairos-typeahead',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TypeaheadComponent0(this.viewUtils,this,0,this._el_0);
    this._TypeaheadComponent_0_3 = new Wrapper_TypeaheadComponent();
    this.compView_0.create(this._TypeaheadComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._TypeaheadComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TypeaheadComponent) && (0 === requestNodeIndex))) { return this._TypeaheadComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TypeaheadComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TypeaheadComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TypeaheadComponentNgFactory:import7.ComponentFactory<import0.TypeaheadComponent> = new import7.ComponentFactory<import0.TypeaheadComponent>('kairos-typeahead',View_TypeaheadComponent_Host0,import0.TypeaheadComponent);
const styles_TypeaheadComponent:any[] = ['*[_ngcontent-%COMP%]     .dropdown-menu {\n        max-height: 200px;\n        overflow: hidden;\n        overflow-y: scroll;\n    }\n    .form-group[_ngcontent-%COMP%] {\n        margin-bottom: 0px;\n    }'];
var renderType_TypeaheadComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_TypeaheadComponent,{});
export class View_TypeaheadComponent0 extends import2.AppView<import0.TypeaheadComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import8.ViewContainer;
  _TemplateRef_3_4:any;
  _text_4:any;
  _el_5:any;
  /*private*/ _vc_5:import8.ViewContainer;
  _DefaultValueAccessor_5_5:import9.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_6:any[];
  _NgModel_5_7:import10.Wrapper_NgModel;
  _NgControl_5_8:any;
  _NgControlStatus_5_9:import11.Wrapper_NgControlStatus;
  _TypeaheadDirective_5_10:import12.Wrapper_TypeaheadDirective;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  /*private*/ _expr_19:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TypeaheadComponent0,renderType_TypeaheadComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_19 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','form-group has-feedback'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import8.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_4 = new import13.TemplateRef_(this,3,this._anchor_3);
    this._text_4 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray2(2,'class','form-control'),(null as any));
    this._vc_5 = new import8.ViewContainer(5,1,this,this._el_5);
    this._DefaultValueAccessor_5_5 = new import9.Wrapper_DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_6 = [this._DefaultValueAccessor_5_5.context];
    this._NgModel_5_7 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_6);
    this._NgControl_5_8 = this._NgModel_5_7.context;
    this._NgControlStatus_5_9 = new import11.Wrapper_NgControlStatus(this._NgControl_5_8);
    this._TypeaheadDirective_5_10 = new import12.Wrapper_TypeaheadDirective(this._NgControl_5_8,this._vc_5.vcRef,new import14.ElementRef(this._el_5),this.renderer,this.parentView.injectorGet(import15.ComponentsHelper,this.parentIndex));
    this._text_6 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_1,'i',new import3.InlineArray2(2,'class','glyphicon glyphicon-menu-down form-control-feedback'),(null as any));
    this._text_8 = this.renderer.createText(this._el_1,'\n	',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArrayDynamic(18,'ngModelChange',(null as any),'typeaheadOnSelect',(null as any),'typeaheadNoResults',(null as any),'typeaheadLoading',(null as any),'blur',(null as any),'input',(null as any),'keyup',(null as any),'focus',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_5));
    this._NgModel_5_7.subscribe(this,this.eventHandler(this.handleEvent_5),true);
    this._TypeaheadDirective_5_10.subscribe(this,this.eventHandler(this.handleEvent_5),true,true,true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_4; }
    if (((token === import16.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_5.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_6; }
    if (((token === import18.NgModel) && (5 === requestNodeIndex))) { return this._NgModel_5_7.context; }
    if (((token === import19.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_8; }
    if (((token === import20.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_9.context; }
    if (((token === import21.TypeaheadDirective) && (5 === requestNodeIndex))) { return this._TypeaheadDirective_5_10.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_5_5.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.context.value;
    this._NgModel_5_7.check_model(currVal_5_1_0,throwOnChange,false);
    this._NgModel_5_7.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_9.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_3_0:any = this.context.typeaheadSource;
    this._TypeaheadDirective_5_10.check_typeahead(currVal_5_3_0,throwOnChange,false);
    const currVal_5_3_1:any = this.context.typeaheadMinLength;
    this._TypeaheadDirective_5_10.check_typeaheadMinLength(currVal_5_3_1,throwOnChange,false);
    const currVal_5_3_2:any = this.context.typeaheadWaitMs;
    this._TypeaheadDirective_5_10.check_typeaheadWaitMs(currVal_5_3_2,throwOnChange,false);
    const currVal_5_3_3:any = this.context.typeaheadOptionsLimit;
    this._TypeaheadDirective_5_10.check_typeaheadOptionsLimit(currVal_5_3_3,throwOnChange,false);
    const currVal_5_3_4:any = this.context.typeaheadOptionField;
    this._TypeaheadDirective_5_10.check_typeaheadOptionField(currVal_5_3_4,throwOnChange,false);
    const currVal_5_3_5:any = this.context.typeaheadGroupField;
    this._TypeaheadDirective_5_10.check_typeaheadGroupField(currVal_5_3_5,throwOnChange,false);
    const currVal_5_3_6:any = this.context.typeaheadAsync;
    this._TypeaheadDirective_5_10.check_typeaheadAsync(currVal_5_3_6,throwOnChange,false);
    const currVal_5_3_7:any = this.context.typeaheadLatinize;
    this._TypeaheadDirective_5_10.check_typeaheadLatinize(currVal_5_3_7,throwOnChange,false);
    const currVal_5_3_8:any = this.context.typeaheadSingleWords;
    this._TypeaheadDirective_5_10.check_typeaheadSingleWords(currVal_5_3_8,throwOnChange,false);
    const currVal_5_3_9:any = this.context.typeaheadWordDelimiters;
    this._TypeaheadDirective_5_10.check_typeaheadWordDelimiters(currVal_5_3_9,throwOnChange,false);
    const currVal_5_3_10:any = this.context.typeaheadPhraseDelimiters;
    this._TypeaheadDirective_5_10.check_typeaheadPhraseDelimiters(currVal_5_3_10,throwOnChange,false);
    const currVal_5_3_11:any = this._TemplateRef_3_4;
    this._TypeaheadDirective_5_10.check_typeaheadItemTemplate(currVal_5_3_11,throwOnChange,false);
    this._TypeaheadDirective_5_10.ngDoCheck(this,this._el_5,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    const currVal_19:any = import3.inlineInterpolate(1,'',this.context.placeholder,'');
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_5,'placeholder',currVal_19);
      this._expr_19 = currVal_19;
    }
    this._NgControlStatus_5_9.checkHost(this,this,this._el_5,throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this._NgModel_5_7.ngOnDestroy();
    this._TypeaheadDirective_5_10.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_TypeaheadComponent1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_5_5.handleEvent(eventName,$event) && result);
    result = (this._TypeaheadDirective_5_10.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.value = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>this.context.valueChange.emit(this.context.value)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'typeaheadOnSelect')) {
      const pd_sub_2:any = ((<any>this.context.typeaheadOnSelect.emit($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'typeaheadNoResults')) {
      const pd_sub_3:any = ((<any>this.context.typeaheadNoResults.emit($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'typeaheadLoading')) {
      const pd_sub_4:any = ((<any>this.context.typeaheadLoading.emit($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_5:any = ((<any>this.context.blur.emit($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
}
class View_TypeaheadComponent1 extends import2.AppView<any> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import8.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import22.Wrapper_NgIf;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import8.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import22.Wrapper_NgIf;
  _text_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import8.ViewContainer) {
    super(View_TypeaheadComponent1,renderType_TypeaheadComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n    		',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_1 = new import8.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import13.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import22.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText((null as any),'\n			',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_3 = new import8.ViewContainer(3,(null as any),this,this._anchor_3);
    this._TemplateRef_3_5 = new import13.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import22.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText((null as any),'\n  		',(null as any));
    this.init(this._text_4,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2,
      this._anchor_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import23.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    if (((token === import13.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import23.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:boolean = (!this.parentView.context.typeaheadOptionsLimit || (this.context.index < (this.parentView.context.typeaheadOptionsLimit - 1)));
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    const currVal_3_0_0:any = (this.context.index === (this.parentView.context.typeaheadOptionsLimit - 1));
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._vc_1.nativeElement,ctx);
    this._vc_1.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_2,ctx);
    cb(this._vc_3.nativeElement,ctx);
    this._vc_3.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_4,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_TypeaheadComponent2(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 3)) { return new View_TypeaheadComponent3(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
class View_TypeaheadComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import8.ViewContainer) {
    super(View_TypeaheadComponent2,renderType_TypeaheadComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',this.parentView.context.item,'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_TypeaheadComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _el_3:any;
  _text_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import8.ViewContainer) {
    super(View_TypeaheadComponent3,renderType_TypeaheadComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_5 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'style','padding-top:5px;'),(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_2,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'And others...',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._el_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_5:any = import3.inlineInterpolate(1,'',this.parentView.context.item,'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_1,currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}